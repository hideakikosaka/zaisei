<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>日本村の予算を作ろう！</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            margin: 0;
            padding: 10px;
            display: flex;
            flex-direction: column;
            align-items: center;
            background-color: #e0f7fa;
        }
        .container {
            display: flex;
            justify-content: center;
            align-items: flex-start;
            flex-wrap: wrap;
            width: 100%;
        }
        .section {
    margin: 3px; /* 余白をより狭くする */
    padding: 10px;
    width: 90%;
    max-width: 800px;
    text-align: center;
    display: flex;
    flex-direction: column;
    align-items: center;
}
.debt-info {
    font-size: 20px;
    font-weight: bold;
    margin: 10px 0; /* グラフとの余白を調整 */
}
.debt-amount {
    color: red;
    font-weight: bold;
}

        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 10px;
        }
        th, td {
            border: 1px solid #ccc;
            padding: 8px;
            text-align: center;
        }
        input {
            width: 100px;
            text-align: right;
            border: 1px solid #ccc;
            padding: 5px;
            background: white;
        }
        .charts {
            display: flex;
            justify-content: center;
            width: 100%;
            flex-wrap: nowrap;
        }
        .charts .section {
            width: 48%;
        }
        canvas {
            width: 100% !important;
            height: 300px !important;
        }
        th:first-child, td:first-child {
            writing-mode: horizontal-tb !important; /* 横書きにする */
            text-orientation: mixed; /* 文字の向きを通常通りにする */
            white-space: nowrap; /* 改行しない */
        }

    </style>
</head>
<body>
    <h1>日本村の予算を作ろう！（1/10万分の1サイズ）</h1>
    
    <div class="container">
        <div class="section">
            <h3>歳出の入力</h3>
            <table>
                <tr>
                    <th>年度</th>
                    <th>年金</th><th>医療</th><th>子ども子育て</th><th>介護</th><th>地方交付金</th>
                    <th>防衛</th><th>公共事業</th><th>教育</th><th>その他</th><th>借金返済</th><th>合計</th>

                </tr>
                <tr>
                    <td>今年</td>
                    <td><input type="number" value="134" id="spendingThisYear0"></td><td><input type="number" value="122" id="spendingThisYear1"></td><td><input type="number" value="34" id="spendingThisYear2"></td><td><input type="number" value="37" id="spendingThisYear3"></td><td><input type="number" value="178" id="spendingThisYear4"></td><td><input type="number" value="79" id="spendingThisYear5"></td><td><input type="number" value="61" id="spendingThisYear6"></td><td><input type="number" value="55" id="spendingThisYear7"></td><td><input type="number" value="155" id="spendingThisYear8"></td><td><input type="number" value="270" id="spendingThisYear9"></td><td class="total-cell" id="spendingTotalThisYear">0</td>

                </tr>
                <tr>
                    <td>来年</td>
                    <td><input type="number" value="134" id="spendingNextYear0"></td><td><input type="number" value="122" id="spendingNextYear1"></td><td><input type="number" value="34" id="spendingNextYear2"></td><td><input type="number" value="37" id="spendingNextYear3"></td><td><input type="number" value="178" id="spendingNextYear4"></td><td><input type="number" value="79" id="spendingNextYear5"></td><td><input type="number" value="61" id="spendingNextYear6"></td><td><input type="number" value="55" id="spendingNextYear7"></td><td><input type="number" value="155" id="spendingNextYear8"></td><td><input type="number" value="270" id="spendingNextYear9"></td><td class="total-cell" id="spendingTotalNextYear">0</td>

                </tr>
            </table>
        </div>
        <div class="section">
            <h3>歳入の入力</h3>
            <table>
                <tr>
                    <th>年度</th>
                    <th>所得税</th><th>消費税</th><th>法人税</th><th>その他の税</th><th>税以外の収入</th><th>借金（国債）</th><th>合計</th>

                </tr>
                <tr>
                    <td>今年</td>
                    <td><input type="number" value="179" id="revenueThisYear0"></td><td><input type="number" value="238" id="revenueThisYear1"></td><td><input type="number" value="170" id="revenueThisYear2"></td><td><input type="number" value="108" id="revenueThisYear3"></td><td><input type="number" value="76" id="revenueThisYear4"></td><td><input type="number" value="354" id="revenueThisYear5"></td><td class="total-cell" id="revenueTotalThisYear">0</td>

                </tr>
                <tr>
                    <td>来年</td>
                    <td><input type="number" value="179" id="revenueNextYear0"></td><td><input type="number" value="238" id="revenueNextYear1"></td><td><input type="number" value="170" id="revenueNextYear2"></td><td><input type="number" value="108" id="revenueNextYear3"></td><td><input type="number" value="76" id="revenueNextYear4"></td><td><input type="number" value="354" id="revenueNextYear5"></td><td class="total-cell" id="revenueTotalNextYear">0</td>

                </tr>
            </table>
        </div>
    </div>

        </div> <!-- 「歳入の入力」セクション終了の直前 -->
    
    <div class="debt-info">
        来年の借金総額は <span class="debt-amount" id="debtAmount">0</span> 万円増加します
    </div>

    <div class="charts">
        <div class="section">
            <h3>歳出の比較</h3>
            <canvas id="spendingChart"></canvas>
        </div>
        <div class="section">
            <h3>歳入の比較</h3>
            <canvas id="revenueChart"></canvas>
        </div>
    </div>
    
    <script>
    document.addEventListener("DOMContentLoaded", function () {
function updateTotals(prefix, totalId) {
    let total = 0;
    document.querySelectorAll(`input[id^="${prefix}"]`).forEach(input => {
        total += Number(input.value) || 0;
    });
    document.getElementById(totalId).textContent = total.toLocaleString();
}

document.querySelectorAll("input").forEach(input => {
    input.addEventListener("input", function () {
        updateTotals("spendingThisYear", "spendingTotalThisYear");
        updateTotals("spendingNextYear", "spendingTotalNextYear");
        updateTotals("revenueThisYear", "revenueTotalThisYear");
        updateTotals("revenueNextYear", "revenueTotalNextYear");
    });
});

// 初期合計計算
updateTotals("spendingThisYear", "spendingTotalThisYear");
updateTotals("spendingNextYear", "spendingTotalNextYear");
updateTotals("revenueThisYear", "revenueTotalThisYear");
updateTotals("revenueNextYear", "revenueTotalNextYear");

        const categoriesSpending = ["年金", "医療", "子ども子育て", "介護", "地方交付金", "防衛", "公共事業", "教育", "その他", "借金返済"];
        const categoriesRevenue = ["所得税", "消費税", "法人税", "その他の税", "税以外の収入", "借金（国債）"];
        const pastelColors = ["#ffadad", "#ffd6a5", "#fdffb6", "#caffbf", "#9bf6ff", "#a0c4ff", "#bdb2ff", "#ffc6ff", "#fffffc", "#ffdfba"];

        let spendingChart, revenueChart;

        function getData(prefix) {
            return Array.from(document.querySelectorAll(`input[id^="${prefix}"]`)).map(input => Number(input.value));
        }

        function updateDebtInfo() {
    const debtIssuedNextYear = Number(document.getElementById("revenueNextYear5").value);
    const debtRepaymentNextYear = Number(document.getElementById("spendingNextYear9").value);
    const debtIncrease = debtIssuedNextYear - debtRepaymentNextYear;
    document.getElementById("debtAmount").textContent = debtIncrease.toLocaleString();
}


        function createChart(canvasId, labels, prefix) {
            const thisYearData = getData(prefix + "ThisYear");
            const nextYearData = getData(prefix + "NextYear");

            if (canvasId === "spendingChart" && spendingChart) spendingChart.destroy();
            if (canvasId === "revenueChart" && revenueChart) revenueChart.destroy();

            const ctx = document.getElementById(canvasId).getContext("2d");
            const chart = new Chart(ctx, {
                type: "bar",
                data: {
                    labels: ["今年", "来年"],
                    datasets: labels.map((label, index) => ({
                        label: label,
                        data: [thisYearData[index] || 0, nextYearData[index] || 0],
                        backgroundColor: pastelColors[index],
                        stack: 'stack1'
                    }))
                },
                options: {
                    indexAxis: "x",
                    scales: {
                        x: { stacked: true },
                        y: { stacked: true }
                    },
                    plugins: {
                        legend: { display: true },
                        datalabels: {
                            display: true,
                            color: "black",
                            anchor: "center",
                            align: "center",
                            formatter: (value) => value + " 万円"
                        }
                    }
                },
                plugins: [ChartDataLabels]
            });

            if (canvasId === "spendingChart") spendingChart = chart;
            if (canvasId === "revenueChart") revenueChart = chart;
        }

        document.querySelectorAll("input").forEach(input => {
            input.addEventListener("input", function () {
                createChart("spendingChart", categoriesSpending, "spending");
                createChart("revenueChart", categoriesRevenue, "revenue");
                updateDebtInfo();
            });
        });

        createChart("spendingChart", categoriesSpending, "spending");
        createChart("revenueChart", categoriesRevenue, "revenue");
        updateDebtInfo();
    });
</script>
